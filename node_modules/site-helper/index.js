/* Shiga license */

var config = require(  '../../config/index.js' );

function SiteHelper ( req, res) {
    if( typeof( req ) == 'object' )this.req = req;
    if( typeof( res ) == 'object' )this.res = res;
}

SiteHelper.url;
SiteHelper.req;
SiteHelper.res;
SiteHelper.dbClient;
SiteHelper.getSiteUrl  = function (params) {
    var url;
    if( this.url )url = this.url;
             else url = config.get("url");

    if( typeof( params ) == "object" ){
        params.forEach( function( value ){
            url +=  value+'/';
        });
    }

    if( typeof( params ) == "string" ){
        url +=  params+'/';
    }

    return url;
}

SiteHelper.getImageSize = function ( file, size ){
    if( !size || size == 0 )return file;
        else {
        var fileparam = file.split(".");
        return fileparam[0]+"_"+size+'.jpg';
    }
}

/**
 * Загружает фиктуры в базу из файла UP
 *
 * @param {fixtureFile} название файла с которого надо загрузить SQL для загрузки
 * @param {callBack}
 */

SiteHelper.fixtureUp = function( fixtureFile, callBack ){
   if( fixtureFile ) {

        var pg = require("pg");
        var fs = require("fs-extra");

        fs.readFile( './spec/fixtures/'+fixtureFile+'-up.sql', 'utf8', function( error, sql ) {
           if( error && error != undefined )callBack( error );
               else {

               SiteHelper.fixtureSQL( sql, function( error ){
                    if( error && error != undefined )callBack( error );
                        else callBack( null );
                });
           }
        });
   }
    else callBack( 'Error load fixture file' );
}

/**
 * Загружает фиктуры в базу из файла DOWN
 *
 * @param {fixtureFile} название файла с которого надо загрузить SQL для загрузки
 * @param {callBack}
 */

SiteHelper.fixtureDown = function( fixtureFile, callBack ){
    if( fixtureFile ) {

        var pg = require("pg");
        var fs = require("fs-extra");

        fs.readFile( './spec/fixtures/'+fixtureFile+'-down.sql', 'utf8', function( error, sql ) {
            if( error && error != undefined )callBack( error );
            else {

                SiteHelper.fixtureSQL( sql, function( error ){
                    if( typeof callBack == 'function'){
                        if( error && error != undefined )callBack( error );
                        else callBack( null );
                    }
                });
            }
        });
    }
        else callBack( 'Error load fixture file' );
}

/**
 * Загружает SQL в базу
 *
 * @param {fixtureFile} название файла с которого надо загрузить SQL для загрузки
 * @param {callBack}
 */

SiteHelper.fixtureSQL = function( sql, callBack ){

    if( sql ) {

        var pg = require("pg");

        if (!this.dbClient) {
            var config = require("../../config");
            var dbConfig = config.get("db");

            // Создаем подключение к PG
            var conString = "postgres://" + dbConfig.connection.user + ":" + dbConfig.connection.password + "@" + dbConfig.connection.host + "/" + dbConfig.connection.database;
            pg.connect(conString, function (err, client, done) {
                if (err) {
                    callBack( ' error fetching client from pool '+ err);
                }

                this.dbClient = client;

                this.dbClient.query(sql, function (error, result) {
                    if ( error && error != undefined)callBack( "# "+error );
                    else callBack( null );
                });

            });
        }
        else {

            this.dbClient.query(sql, function (error, result) {
                if ( error && error != undefined)callBack( "@ "+error );
                else callBack( null );
            });
        }
    }
        else callBack( 'sql - empty' );

}

module.exports = SiteHelper;